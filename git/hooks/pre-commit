#!/usr/bin/env python3.9
# -*- coding: utf-8 -*-
import os
import sys
from typing import List


# CONFIG:
pre_commit_config_name = ".pre-commit-config.yaml"
GLOBAL_PRE_COMMIT_CONFIG_LOCATION = os.path.join(
    f"{os.getenv('HOME')}/site/git/dotfiles/git/",
    pre_commit_config_name,
)


repos_keyword = "repos:"
repo_keyword = "repo: "
stop_keyword = "  # global hooks:"
local_repo = "local"


def get_url_from_repo_line(repo_line):
    return repo_line[repo_line.find(repo_keyword) + len(repo_keyword) :]


with open(GLOBAL_PRE_COMMIT_CONFIG_LOCATION) as file:
    global_config = file.read()

filtered_config: List[str] = []

if not os.path.exists(pre_commit_config_name):
    print("Creating " + pre_commit_config_name)
    added_stop_keyword = False
    for line in global_config.split("\n"):
        if repo_keyword in line and not added_stop_keyword:
            filtered_config.append("\n" + stop_keyword)
            added_stop_keyword = True
        filtered_config.append(line)

    with open(pre_commit_config_name, "w") as file:
        file.write("\n".join(filtered_config))

else:
    with open(pre_commit_config_name) as file:
        local_config = file.read()

    trimmed_global_config = global_config[
        global_config.find(repos_keyword) :
    ]

    repos: List[str] = []
    if stop_keyword not in local_config:
        print(local_config)
        print("Unable to find the stop keyword in the config file")
        exit(1)

    for line in local_config.split("\n"):
        if stop_keyword in line:
            found_excluded_repo = False
            filtered_config.append(stop_keyword)
            for global_line in trimmed_global_config.split("\n")[1:]:
                if repo_keyword in global_line:
                    url = get_url_from_repo_line(global_line)
                    found_excluded_repo = (
                        url in repos and url != local_repo
                    )
                if found_excluded_repo:
                    continue
                else:
                    filtered_config.append(global_line)
            break
        elif repo_keyword in line:
            repos.append(get_url_from_repo_line(line))

        filtered_config.append(line)

    with open(pre_commit_config_name, "w") as file:
        file.write("\n".join(filtered_config))


# we try our best, but the shebang of this script is difficult to determine:
# - macos doesn't ship with python3
# - windows executables are almost always `python.exe`
# therefore we continue to support python2 for this small script
if sys.version_info < (3, 3):
    from distutils.spawn import find_executable as which
else:
    from shutil import which

# work around https://github.com/Homebrew/homebrew-core/issues/30445
os.environ.pop("__PYVENV_LAUNCHER__", None)

# start templated
INSTALL_PYTHON = (
    "/Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9"
)
ARGS = [
    "hook-impl",
    "--config=.pre-commit-config.yaml",
    "--hook-type=pre-commit",
]
# end templated
ARGS.extend(("--hook-dir", os.path.realpath(os.path.dirname(__file__))))
ARGS.append("--")
ARGS.extend(sys.argv[1:])

DNE = "`pre-commit` not found.  Did you forget to activate your virtualenv?"
if os.access(INSTALL_PYTHON, os.X_OK):
    CMD = [INSTALL_PYTHON, "-mpre_commit"]
elif which("pre-commit"):
    CMD = ["pre-commit"]
else:
    raise SystemExit(DNE)

CMD.extend(ARGS)
if sys.platform == "win32":  # https://bugs.python.org/issue19124
    import subprocess

    if sys.version_info < (3, 7):  # https://bugs.python.org/issue25942
        raise SystemExit(subprocess.Popen(CMD).wait())
    else:
        raise SystemExit(subprocess.call(CMD))
else:
    os.execvp(CMD[0], CMD)
